{"mappings":"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","sources":["app.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n  // ------------------- REGISTER -------------------\r\n  const registerForm = document.querySelector(\"form.signup-form\");\r\n  if (registerForm) {\r\n    registerForm.addEventListener(\"submit\", async (e) => {\r\n      e.preventDefault();\r\n\r\n      const name = document.getElementById(\"name\")?.value.trim();\r\n      const email = document.getElementById(\"email\")?.value.trim();\r\n      const password = document.getElementById(\"password\")?.value.trim();\r\n\r\n      if (!name || !email || !password) {\r\n        alert(\"⚠ Please fill all fields.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/register\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ name, email, password }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const err = await response.json();\r\n          alert(\"❌ Signup failed: \" + (err.message || \"Something went wrong\"));\r\n          return;\r\n        }\r\n\r\n        alert(\"✅ Signup successful! Please login now.\");\r\n        window.location.href = \"login.html\";\r\n      } catch (err) {\r\n        console.error(\"Signup error:\", err);\r\n        alert(\"❌ Network error: \" + err.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  // ------------------- LOGIN -------------------\r\n  const loginForm = document.getElementById(\"loginForm\");\r\n  if (loginForm) {\r\n    loginForm.addEventListener(\"submit\", async (e) => {\r\n      e.preventDefault();\r\n\r\n      const email = document.getElementById(\"email\")?.value.trim();\r\n      const password = document.getElementById(\"password\")?.value;\r\n\r\n      if (!email || !password) {\r\n        alert(\"⚠ Please fill in all fields.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/login\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const err = await response.json();\r\n          alert(\"❌ Login failed: \" + (err.message || \"Something went wrong\"));\r\n          return;\r\n        }\r\n\r\n        const { accessToken, refreshToken } = await response.json();\r\n\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"refreshToken\", refreshToken);\r\n\r\n        alert(\"✅ Login successful!\");\r\n\r\n        const redirectURL = localStorage.getItem(\"redirectAfterLogin\") || \"index.html\";\r\n        window.location.href = redirectURL;\r\n      } catch (err) {\r\n        console.error(\"Login error:\", err);\r\n        alert(\"❌ An error occurred during login.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  // ------------------- TOKEN REFRESH -------------------\r\n  async function refreshAccessToken() {\r\n    const refreshToken = localStorage.getItem(\"refreshToken\");\r\n    if (!refreshToken) throw new Error(\"No refresh token found\");\r\n\r\n    const response = await fetch(\"http://localhost:8080/refresh\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"text/plain\" },\r\n      body: refreshToken\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Please Login\");\r\n    }\r\n\r\n    const { accessToken } = await response.json();\r\n    localStorage.setItem(\"accessToken\", accessToken);\r\n  }\r\n\r\n  // ------------------- PROTECTED FETCH WRAPPER -------------------\r\n  async function fetchWithAuth(url, options) {\r\n    let accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n    options.headers = options.headers || {};\r\n    options.headers[\"Authorization\"] = \"Bearer \" + accessToken;\r\n\r\n    let response = await fetch(url, options);\r\n\r\n    if (response.status === 401) {\r\n      // Token expired → refresh\r\n      try {\r\n        await refreshAccessToken();\r\n\r\n        accessToken = localStorage.getItem(\"accessToken\");\r\n        options.headers[\"Authorization\"] = \"Bearer \" + accessToken;\r\n\r\n        response = await fetch(url, options); // retry once\r\n      } catch (err) {\r\n        alert(\"⚠ Session expired. Please log in again.\");\r\n        localStorage.clear();\r\n        window.location.href = \"login.html\";\r\n        return;\r\n      }\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  // ------------------- UPLOAD + AUTO ATS ANALYSIS -------------------\r\n  const form = document.querySelector(\".upload-form\");\r\n  if (form) {\r\n    form.addEventListener(\"submit\", async (e) => {\r\n      e.preventDefault();\r\n\r\n      const accessToken = localStorage.getItem(\"accessToken\");\r\n      const refreshToken = localStorage.getItem(\"refreshToken\");\r\n\r\n      if (!accessToken || !refreshToken) {\r\n        localStorage.setItem(\"redirectAfterLogin\", window.location.href);\r\n        alert(\"⚠ You must log in first!\");\r\n        window.location.href = \"login.html\";\r\n        return;\r\n      }\r\n\r\n      const resume = document.getElementById(\"resume\").files[0];\r\n      const jobdesc = document.getElementById(\"jobdesc\").value;\r\n\r\n      if (!resume || !jobdesc) {\r\n        alert(\"⚠ Please upload your resume and paste the job description.\");\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"resume\", resume);\r\n      formData.append(\"jobdesc\", jobdesc);\r\n\r\n      try {\r\n        // 1️⃣ Upload resume\r\n        let uploadResponse = await fetchWithAuth(\"http://localhost:8080/upload\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        if (!uploadResponse.ok) {\r\n          const errorText = await uploadResponse.text();\r\n          alert(\"❌ Upload failed: \" + errorText);\r\n          return;\r\n        }\r\n\r\n        const uploadedData = await uploadResponse.json();\r\n        const resumeId = uploadedData.resumeId;\r\n\r\n        console.log(\"✅ Resume uploaded with ID:\", resumeId);\r\n        alert(\"✅ Resume uploaded! Starting ATS analysis...\");\r\n\r\n        // 2️⃣ Call ATS Analysis\r\n        await analyzeResume(resumeId);\r\n\r\n      } catch (err) {\r\n        console.error(\"Upload+Analyze Error:\", err);\r\n        alert(\"❌ Something went wrong: \" + err.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  // ------------------- ATS ANALYSIS API CALL -------------------\r\n  async function analyzeResume(resumeId) {\r\n    try {\r\n      const accessToken = localStorage.getItem(\"accessToken\");\r\n\r\n      const response = await fetch(\"http://localhost:8080/analyze\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": \"Bearer \" + accessToken\r\n        },\r\n        body: JSON.stringify({ resumeId })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const err = await response.text();\r\n        alert(\"❌ ATS Analysis failed: \" + err);\r\n        return;\r\n      }\r\n\r\n      const analysis = await response.json();\r\n\r\n      // ✅ Show ATS results in UI\r\n      console.log(\"🎯 Match Score:\", analysis.matchScore);\r\n      console.log(\"📝 Missing Keywords:\", analysis.missingKeywords);\r\n      console.log(\"💡 Suggestions:\", analysis.suggestions);\r\n\r\n      // Create or update result container dynamically\r\n      let resultContainer = document.getElementById(\"analysisResult\");\r\n      if (!resultContainer) {\r\n        resultContainer = document.createElement(\"div\");\r\n        resultContainer.id = \"analysisResult\";\r\n        document.querySelector(\".upload-section\").appendChild(resultContainer);\r\n      }\r\n\r\n      resultContainer.innerHTML = `\r\n        <h3>✅ ATS Analysis Result</h3>\r\n        <p><strong>🎯 Match Score:</strong> ${analysis.matchScore}</p>\r\n        <p><strong>📝 Missing Keywords:</strong> ${analysis.missingKeywords?.join(\", \") || \"None\"}</p>\r\n        <p><strong>💡 Suggestions:</strong> ${analysis.suggestions || \"No suggestions\"}</p>\r\n      `;\r\n\r\n      alert(`✅ ATS Analysis Complete!\\n🎯 Match Score: ${analysis.matchScore}`);\r\n\r\n    } catch (err) {\r\n      console.error(\"ATS Analysis Error:\", err);\r\n      alert(\"❌ Error analyzing resume.\");\r\n    }\r\n  }\r\n\r\n});\r\n"],"names":[],"version":3,"file":"ResCall-without-Animationn-main.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}